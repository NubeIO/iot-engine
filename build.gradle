import com.nubeiot.buildscript.ProjectUtils

plugins {
    id "eclipse"
    id "idea"
    id "java-test-fixtures"
    id "org.sonarqube" apply false
    id "net.ltgt.apt" apply false
}

apply from: "buildSrc/dependencies.gradle"

ext {
    baseName = "nubeio"
}

defaultTasks 'clean', 'jooq', 'build'
group = 'com.nubeiot'

allprojects {
    repositories project.repos

    configurations {
        providedRuntime
    }

    version = project.version + (!project.semanticVersion?.trim() ? "" : ("-" + project.semanticVersion?.trim()))
    project.ext.computeBaseName = { -> ProjectUtils.computeBaseName(project) }
    project.ext.loadSecretProps = { f -> ProjectUtils.loadSecretProps(project, f) }
}

subprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"
    apply plugin: "maven"
    apply plugin: "java-library-distribution"
    apply plugin: "java-test-fixtures"
    apply plugin: "jacoco"
    apply plugin: "net.ltgt.apt"

    group = ProjectUtils.computeGroup(project)

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    dependencies {
        compileOnly project.deps.lombok
        annotationProcessor project.deps.lombok

        testCompile project.deps.tests.junit
        testCompile project.deps.tests.jsonAssert
        testCompile project.deps.vertx.junit
        testCompileOnly project.deps.lombok
        testAnnotationProcessor project.deps.lombok
    }

    //TODO docker
//    task dockerBuild(type: DockerBuildTask) {
//        javaVersion = ProjectUtils.extraProp(project, "javaVersion", "8u265")
//        javaEdition = JavaEdition.valueOf(ProjectUtils.extraProp(project, "javaEdition", JavaEdition.OPENJDK.name()))
//        javaType = JavaType.valueOf(ProjectUtils.extraProp(project, "javaType", JavaType.JRE.name()))
//        vcsBranch = ProjectUtils.extraProp(project, "vcsBranch", "")
//    }

    apply from: "$rootDir/buildSrc/generated.gradle"
    apply from: "$rootDir/buildSrc/javadoc.gradle"
    apply from: "$rootDir/buildSrc/bundle.gradle"
    apply from: "$rootDir/buildSrc/nexus.gradle"
    apply from: "$rootDir/buildSrc/misc.gradle"
}

apply from: "buildSrc/global.gradle"
apply from: "buildSrc/sonar.gradle"
