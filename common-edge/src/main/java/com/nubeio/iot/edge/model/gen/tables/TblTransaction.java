/*
 * This file is generated by jOOQ.
*/
package com.nubeio.iot.edge.model.gen.tables;


import java.util.Arrays;
import java.util.Date;
import java.util.List;
import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import com.nubeio.iot.edge.model.converter.DateConverter;
import com.nubeio.iot.edge.model.gen.DefaultSchema;
import com.nubeio.iot.edge.model.gen.Indexes;
import com.nubeio.iot.edge.model.gen.Keys;
import com.nubeio.iot.edge.model.gen.tables.records.TblTransactionRecord;
import com.nubeio.iot.share.enums.Status;
import com.nubeio.iot.share.event.EventType;

import io.github.jklingsporn.vertx.jooq.shared.JsonObjectConverter;
import io.vertx.core.json.JsonObject;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TblTransaction extends TableImpl<TblTransactionRecord> {

    private static final long serialVersionUID = -1328562186;

    /**
     * The reference instance of <code>tbl_transaction</code>
     */
    public static final TblTransaction TBL_TRANSACTION = new TblTransaction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TblTransactionRecord> getRecordType() {
        return TblTransactionRecord.class;
    }

    /**
     * The column <code>tbl_transaction.transaction_id</code>.
     */
    public final TableField<TblTransactionRecord, String> TRANSACTION_ID = createField("transaction_id", org.jooq.impl.SQLDataType.VARCHAR(31).nullable(false), this, "");

    /**
     * The column <code>tbl_transaction.module_id</code>.
     */
    public final TableField<TblTransactionRecord, String> MODULE_ID = createField("module_id", org.jooq.impl.SQLDataType.VARCHAR(127).nullable(false), this, "");

    /**
     * The column <code>tbl_transaction.event</code>.
     */
    public final TableField<TblTransactionRecord, EventType> EVENT = createField("event", org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "", new org.jooq.impl.EnumConverter<java.lang.String, EventType>(java.lang.String.class, EventType.class));

    /**
     * The column <code>tbl_transaction.status</code>.
     */
    public final TableField<TblTransactionRecord, Status> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "", new org.jooq.impl.EnumConverter<java.lang.String, Status>(java.lang.String.class, Status.class));

    /**
     * The column <code>tbl_transaction.issued_at</code>.
     */
    public final TableField<TblTransactionRecord, Date> ISSUED_AT = createField("issued_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new DateConverter());

    /**
     * The column <code>tbl_transaction.issued_by</code>.
     */
    public final TableField<TblTransactionRecord, String> ISSUED_BY = createField("issued_by", org.jooq.impl.SQLDataType.VARCHAR(127), this, "");

    /**
     * The column <code>tbl_transaction.issued_from</code>.
     */
    public final TableField<TblTransactionRecord, String> ISSUED_FROM = createField("issued_from", org.jooq.impl.SQLDataType.VARCHAR(63), this, "");

    /**
     * The column <code>tbl_transaction.modified_at</code>.
     */
    public final TableField<TblTransactionRecord, Date> MODIFIED_AT = createField("modified_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "", new DateConverter());

    /**
     * The column <code>tbl_transaction.prev_state_json</code>.
     */
    public final TableField<TblTransactionRecord, JsonObject> PREV_STATE_JSON = createField("prev_state_json", org.jooq.impl.SQLDataType.CLOB, this, "", new JsonObjectConverter());

    /**
     * The column <code>tbl_transaction.last_error_json</code>.
     */
    public final TableField<TblTransactionRecord, JsonObject> LAST_ERROR_JSON = createField("last_error_json", org.jooq.impl.SQLDataType.CLOB, this, "", new JsonObjectConverter());

    /**
     * The column <code>tbl_transaction.retry</code>.
     */
    public final TableField<TblTransactionRecord, Integer> RETRY = createField("retry", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>tbl_transaction</code> table reference
     */
    public TblTransaction() {
        this(DSL.name("tbl_transaction"), null);
    }

    /**
     * Create an aliased <code>tbl_transaction</code> table reference
     */
    public TblTransaction(String alias) {
        this(DSL.name(alias), TBL_TRANSACTION);
    }

    /**
     * Create an aliased <code>tbl_transaction</code> table reference
     */
    public TblTransaction(Name alias) {
        this(alias, TBL_TRANSACTION);
    }

    private TblTransaction(Name alias, Table<TblTransactionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TblTransaction(Name alias, Table<TblTransactionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_TBL_TRANSACTION_MODULE_ID, Indexes.IDX_TBL_TRANSACTION_MODULE_LIFETIME, Indexes.SQLITE_AUTOINDEX_TBL_TRANSACTION_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TblTransactionRecord> getPrimaryKey() {
        return Keys.PK_TBL_TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TblTransactionRecord>> getKeys() {
        return Arrays.<UniqueKey<TblTransactionRecord>>asList(Keys.PK_TBL_TRANSACTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TblTransactionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TblTransactionRecord, ?>>asList(Keys.FK_TBL_TRANSACTION_TBL_MODULE_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblTransaction as(String alias) {
        return new TblTransaction(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TblTransaction as(Name alias) {
        return new TblTransaction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TblTransaction rename(String name) {
        return new TblTransaction(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TblTransaction rename(Name name) {
        return new TblTransaction(name, null);
    }
}
