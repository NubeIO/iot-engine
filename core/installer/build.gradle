import org.jooq.meta.jaxb.ForcedType

import com.nubeiot.buildscript.Strings
import com.nubeiot.buildscript.jooq.DB
import com.nubeiot.buildscript.jooq.JooqGenerateTask
import com.nubeiot.buildscript.jooq.JooqGenerateTask.JsonDataType

dependencies {
    compile project(':core:base')
    compile project(':core:auth')
    compile project(':core:sql')
    compile project(':core:micro')
    compile project(':eventbus:edge')
    compile project.deps.database.h2
    compile "io.vertx:vertx-maven-service-factory:$project.versions.vertx"
    compile "net.lingala.zip4j:zip4j:2.5.0"

    testCompile project(":core:base").sourceSets.test.output
}

task jooqGen(type: JooqGenerateTask) {
    packageName = "com.nubeiot.edge.installer.model"
    doFirst {
        enumTypes = project(':core:sql').ext.enumTypes
        dbTypes = project(':core:sql').ext.dbTypes + [
            new ForcedType(userType: "com.nubeiot.edge.installer.loader.ModuleType", types: DB.TYPES.varchar,
                           expression: Strings.toRegexIgnoreCase("service_type"),
                           converter: "com.nubeiot.edge.installer.model.converter.ModuleTypeConverter")
        ]
        javaTypes = project(':core:sql').ext.javaTypes + [
            new JsonDataType(className: "com.nubeiot.edge.installer.loader.ModuleType",
                             converter: "%s.name()",
                             parser: "com.nubeiot.edge.installer.loader.ModuleType.factory((String)%s)",
                             defVal: "com.nubeiot.edge.installer.loader.ModuleType.getDefault()")
        ]
    }

}
