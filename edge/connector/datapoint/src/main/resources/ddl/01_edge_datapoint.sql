CREATE SCHEMA IF NOT EXISTS PUBLIC;

CREATE TABLE IF NOT EXISTS  PUBLIC.POINT_UNIT (
	TYPE                 VARCHAR(15)   NOT NULL,
	UNIT                 VARCHAR(15)   ,
	CATEGORY             VARCHAR(31)   NOT NULL,
	POSSIBLE_VALUES_JSON CLOB(2147483647)   ,
	CONSTRAINT PK_POINT_UNIT_TYPE PRIMARY KEY ( TYPE )
 );

CREATE TABLE IF NOT EXISTS  PUBLIC.SENSOR (
	NAME                 VARCHAR(63)   NOT NULL,
	LABEL                VARCHAR(127)   ,
	CONSTRAINT PK_SENSOR_NAME PRIMARY KEY ( NAME )
 );

CREATE TABLE IF NOT EXISTS  PUBLIC.CLIENT (
	ID                 UUID   NOT NULL,
	NAME               VARCHAR(255)   ,
	CONSTRAINT CLIENT_PK PRIMARY KEY ( ID )
 );

CREATE TABLE IF NOT EXISTS  PUBLIC.TAG (
	NAME               VARCHAR(63)   NOT NULL,
	LABEL              VARCHAR(63)   ,
	CONSTRAINT TAG_PK PRIMARY KEY ( NAME )
 );

CREATE TABLE IF NOT EXISTS  PUBLIC.BUILDING (
	ID                 UUID   NOT NULL,
	NAME               VARCHAR(255)   ,
	CLIENT             UUID   ,
	CONSTRAINT BUILDING_PK PRIMARY KEY ( ID )
 );

CREATE INDEX BUILDING_CLIENT_FK_INDEX_A ON PUBLIC.BUILDING ( CLIENT );

CREATE TABLE IF NOT EXISTS  PUBLIC.DEVICE (
	ID                 UUID   NOT NULL,
	NAME               VARCHAR(255)   ,
	BUILDING           UUID   ,
	CONSTRAINT DEVICE_PK PRIMARY KEY ( ID )
 );

CREATE INDEX DEVICE_BUILDING_FK_INDEX_B ON PUBLIC.DEVICE ( BUILDING );

CREATE TABLE IF NOT EXISTS  PUBLIC.POINT (
	ID                 UUID   NOT NULL,
	NAME               VARCHAR(63)   NOT NULL,
	LABEL              VARCHAR(127)   ,
	POINT_CATEGORY     VARCHAR(31)  DEFAULT 'UNKNOWN' NOT NULL,
	POINT_KIND         VARCHAR(15)  DEFAULT 'UNKNOWN' NOT NULL,
	POINT_TYPE         VARCHAR(31)  DEFAULT 'UNKNOWN' NOT NULL,
	POINT_UNIT         VARCHAR(15)  NOT NULL,
	MIN_SCALE          SMALLINT  DEFAULT 0 NOT NULL,
	MAX_SCALE          SMALLINT  DEFAULT 10 NOT NULL,
	PRECISION          SMALLINT  DEFAULT 3 NOT NULL,
	"OFFSET"             SMALLINT  DEFAULT 0 NOT NULL,
	VERSION            VARCHAR(31)   ,
	NETWORK            VARCHAR(127)   ,
	METADATA_JSON      CLOB(2147483647)   ,
	DEVICE             UUID   ,
	CREATED_AT         TIMESTAMP  DEFAULT CURRENT_TIMESTAMP() NOT NULL,
	MODIFIED_AT        TIMESTAMP  DEFAULT 1 NOT NULL,
	CONSTRAINT POINT_PK PRIMARY KEY ( ID ),
	CONSTRAINT POINT_NAME_UQ_INDEX_6 UNIQUE ( NAME, NETWORK, DEVICE )
 );

CREATE INDEX POINT_DEVICE_FK_INDEX_6 ON PUBLIC.POINT ( DEVICE );

CREATE INDEX FK_POINT_UNIT_INDEX_6 ON PUBLIC.POINT ( POINT_UNIT );

CREATE TABLE IF NOT EXISTS  PUBLIC.POINT_HISTORY_DATA (
	POINT              UUID   ,
	TIME               TIMESTAMP   NOT NULL,
	SYNC               BOOLEAN  DEFAULT FALSE NOT NULL,
	VALUE              DOUBLE   ,
	CONSTRAINT POINT_HISTORY_TS_INDEX_8 UNIQUE ( POINT, TIME )
 );

CREATE INDEX HISTORY_DATA_POINT_FK_INDEX_8 ON PUBLIC.POINT_HISTORY_DATA ( POINT );

CREATE TABLE IF NOT EXISTS  PUBLIC.POINT_TAG (
	TAG                VARCHAR(63)   NOT NULL,
	POINT              UUID   NOT NULL,
	CONSTRAINT POINT_TAG_PK PRIMARY KEY ( TAG, POINT )
 );

CREATE INDEX POINT_TAG_FK_INDEX_5 ON PUBLIC.POINT_TAG ( TAG );

CREATE INDEX TAG_POINT_FK_INDEX_5 ON PUBLIC.POINT_TAG ( POINT );

CREATE TABLE IF NOT EXISTS  PUBLIC.POINT_VALUE_DATA (
	POINT              UUID   NOT NULL,
	VALUE              DOUBLE   ,
	PRIORITY           SMALLINT   NOT NULL,
	PRIORITY_VALUES_JSON CLOB(2147483647)   ,
	MODIFIED_AT        TIMESTAMP  DEFAULT CURRENT_TIMESTAMP() ,
	CONSTRAINT POINT_VALUE_DATA_PK PRIMARY KEY ( POINT )
 );

CREATE TABLE IF NOT EXISTS  PUBLIC.POINT_REALTIME_DATA (
	POINT                UUID   NOT NULL,
	TIME                 TIMESTAMP  DEFAULT CURRENT_TIMESTAMP() NOT NULL,
	SYNC                 BOOLEAN  DEFAULT FALSE NOT NULL,
	VALUE_JSON           CLOB(2147483647)   ,
	CONSTRAINT IDX_POINT_REALTIME_DATA UNIQUE ( POINT, TIME )
 );

CREATE INDEX FK_POINT_REALTIME_DATA_POINT_INDEX_6 ON PUBLIC.POINT_REALTIME_DATA ( POINT );

CREATE TABLE IF NOT EXISTS  PUBLIC.REALTIME_SETTING (
	POINT                UUID   NOT NULL,
	ENABLED              BOOLEAN  DEFAULT FALSE NOT NULL,
	TOLERANCE            DOUBLE   ,
	CONSTRAINT IDX_REALTIME_SETTING PRIMARY KEY ( POINT )
 );

CREATE TABLE IF NOT EXISTS  PUBLIC.SCHEDULE (
	ID                   UUID   NOT NULL,
	POINT                UUID   NOT NULL,
	RECURRING            BOOLEAN  DEFAULT TRUE NOT NULL,
	NAME                 VARCHAR(63)   NOT NULL,
	COLOR                VARCHAR(15)  DEFAULT '#FFFFFF' NOT NULL,
	START_TIME           TIMESTAMP   NOT NULL,
	END_TIME             TIMESTAMP   NOT NULL,
	VALUE                DOUBLE   NOT NULL,
	WEEKDAYS             ARRAY   ,
	CONSTRAINT IDX_SCHEDULE PRIMARY KEY ( ID )
 );

CREATE INDEX FK_SCHEDULE_POINT_INDEX_5 ON PUBLIC.SCHEDULE ( POINT );

CREATE TABLE IF NOT EXISTS  PUBLIC.SENSOR_POINT (
	POINT                UUID   NOT NULL,
	SENSOR               VARCHAR(63)   NOT NULL,
	CONSTRAINT IDX_SENSOR_POINT PRIMARY KEY ( POINT, SENSOR )
 );

CREATE INDEX FK_POINT_SENSOR_INDEX_6 ON PUBLIC.SENSOR_POINT ( POINT );

CREATE INDEX FK_SENSOR_POINT_INDEX_6 ON PUBLIC.SENSOR_POINT ( SENSOR );

CREATE TABLE IF NOT EXISTS  PUBLIC.HISTORY_SETTING (
	POINT                UUID   NOT NULL,
	HISTORY_SETTING_TYPE VARCHAR(15)   ,
	SCHEDULE             VARCHAR(127)   ,
	TOLERANCE            DOUBLE   ,
	SIZE                 INTEGER   ,
	CONSTRAINT HISTORY_SETTING_PK PRIMARY KEY ( POINT )
 );

ALTER TABLE PUBLIC.POINT_REALTIME_DATA ADD CONSTRAINT FK_POINT_REALTIME_DATA_POINT FOREIGN KEY ( POINT ) REFERENCES PUBLIC.POINT( ID ) ON DELETE RESTRICT ON UPDATE NO ACTION;

ALTER TABLE PUBLIC.REALTIME_SETTING ADD CONSTRAINT FK_REALTIME_SETTING_POINT FOREIGN KEY ( POINT ) REFERENCES PUBLIC.POINT( ID ) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PUBLIC.SCHEDULE ADD CONSTRAINT FK_SCHEDULE_POINT FOREIGN KEY ( POINT ) REFERENCES PUBLIC.POINT( ID ) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PUBLIC.SENSOR_POINT ADD CONSTRAINT FK_SENSOR_POINT FOREIGN KEY ( SENSOR ) REFERENCES PUBLIC.SENSOR( NAME ) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PUBLIC.SENSOR_POINT ADD CONSTRAINT FK_POINT_SENSOR FOREIGN KEY ( POINT ) REFERENCES PUBLIC.POINT( ID ) ON DELETE CASCADE ON UPDATE NO ACTION;

ALTER TABLE PUBLIC.BUILDING ADD CONSTRAINT BUILDING_CLIENT_FK FOREIGN KEY ( CLIENT ) REFERENCES PUBLIC.CLIENT( ID ) ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE PUBLIC.DEVICE ADD CONSTRAINT DEVICE_BUILDING_FK FOREIGN KEY ( BUILDING ) REFERENCES PUBLIC.BUILDING( ID ) ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE PUBLIC.HISTORY_SETTING ADD CONSTRAINT HISTORY_SETTING_POINT_FK FOREIGN KEY ( POINT ) REFERENCES PUBLIC.POINT( ID ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PUBLIC.POINT ADD CONSTRAINT POINT_DEVICE_FK FOREIGN KEY ( DEVICE ) REFERENCES PUBLIC.DEVICE( ID ) ON DELETE RESTRICT ON UPDATE CASCADE;

ALTER TABLE PUBLIC.POINT ADD CONSTRAINT FK_POINT_UNIT FOREIGN KEY ( POINT_UNIT ) REFERENCES PUBLIC.POINT_UNIT( TYPE ) ON DELETE RESTRICT ON UPDATE NO ACTION;

ALTER TABLE PUBLIC.POINT_HISTORY_DATA ADD CONSTRAINT HISTORY_DATA_POINT_FK FOREIGN KEY ( POINT ) REFERENCES PUBLIC.POINT( ID ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PUBLIC.POINT_TAG ADD CONSTRAINT TAG_POINT_FK FOREIGN KEY ( POINT ) REFERENCES PUBLIC.POINT( ID ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PUBLIC.POINT_TAG ADD CONSTRAINT POINT_TAG_FK FOREIGN KEY ( TAG ) REFERENCES PUBLIC.TAG( NAME ) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE PUBLIC.POINT_VALUE_DATA ADD CONSTRAINT VALUE_POINT_FK FOREIGN KEY ( POINT ) REFERENCES PUBLIC.POINT( ID ) ON DELETE CASCADE ON UPDATE CASCADE;
