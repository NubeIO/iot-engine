CREATE SCHEMA IF NOT EXISTS PUBLIC;

CREATE TABLE IF NOT EXISTS JOB_ENTITY (
	ID                   int GENERATED ALWAYS AS IDENTITY  NOT NULL,
	GROUP_NAME           varchar(63)   NOT NULL,
	NAME                 varchar(63)   NOT NULL,
	JOB_TYPE             varchar(15)   NOT NULL,
	FORWARD_IF_FAILURE   boolean  DEFAULT TRUE NOT NULL,
	JOB_DETAIL_JSON      clob(2147483647) ,
	TIME_AUDIT           varchar(500)   ,
	SYNC_AUDIT           varchar(500)   ,
	CONSTRAINT PK_JOB_ENTITY_ID PRIMARY KEY ( ID ),
	CONSTRAINT IDX_UQ_JOB_ENTITY UNIQUE ( GROUP_NAME, NAME )
 );

CREATE INDEX IDX_JOB_ENTITY_GROUP ON JOB_ENTITY ( GROUP_NAME );
CREATE INDEX IDX_JOB_ENTITY_TYPE ON JOB_ENTITY ( JOB_TYPE );

CREATE TABLE IF NOT EXISTS TRIGGER_ENTITY (
	ID                   int GENERATED ALWAYS AS IDENTITY  NOT NULL,
	GROUP_NAME           varchar(63)   NOT NULL,
	NAME                 varchar(63)   NOT NULL,
	TRIGGER_TYPE         varchar(15)   NOT NULL,
	TRIGGER_DETAIL_JSON  clob(2147483647) ,
	TRIGGER_THREAD       varchar(127)   ,
	TIME_AUDIT           varchar(500)   ,
	SYNC_AUDIT           varchar(500)   ,
	CONSTRAINT PK_TRIGGER_ENTITY_ID PRIMARY KEY ( ID ),
	CONSTRAINT IDX_UQ_TRIGGER_ENTITY UNIQUE ( GROUP_NAME, NAME )
 );

CREATE INDEX IDX_TRIGGER_ENTITY_GROUP ON TRIGGER_ENTITY ( GROUP_NAME );
CREATE INDEX IDX_TRIGGER_ENTITY_TYPE ON TRIGGER_ENTITY ( TRIGGER_TYPE );
CREATE INDEX IDX_TRIGGER_ENTITY_THREAD ON TRIGGER_ENTITY ( TRIGGER_THREAD );

COMMENT ON COLUMN TRIGGER_ENTITY.TRIGGER_THREAD IS 'Logical thread to group CRON trigger. If is not null if TRIGGER_TYPE = CRON';

CREATE TABLE IF NOT EXISTS JOB_TRIGGER (
    ID                  int GENERATED ALWAYS AS IDENTITY  NOT NULL,
    JOB_ENTITY           int NOT NULL,
    TRIGGER_ENTITY       int NOT NULL,
	TIME_AUDIT          varchar(500)   ,
	SYNC_AUDIT          varchar(500)   ,
    CONSTRAINT PK_JOB_TRIGGER_ID PRIMARY KEY ( ID ),
	CONSTRAINT IDX_UQ_JOB_TRIGGER UNIQUE ( JOB_ENTITY, TRIGGER_ENTITY )
);

ALTER TABLE JOB_TRIGGER ADD CONSTRAINT FK_JOB_TRIGGER_JOB FOREIGN KEY ( JOB_ENTITY ) REFERENCES JOB_ENTITY( ID ) ON DELETE RESTRICT ON UPDATE CASCADE;
ALTER TABLE JOB_TRIGGER ADD CONSTRAINT FK_JOB_TRIGGER_TRIGGER FOREIGN KEY ( TRIGGER_ENTITY ) REFERENCES TRIGGER_ENTITY( ID ) ON DELETE RESTRICT ON UPDATE CASCADE;
CREATE INDEX IDX_JOB_TRIGGER_JOB ON JOB_TRIGGER ( JOB_ENTITY );
CREATE INDEX IDX_JOB_TRIGGER_TRIGGER ON JOB_TRIGGER ( TRIGGER_ENTITY );
