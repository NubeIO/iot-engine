worker_processes 1;

events {worker_connections 1024;}

http {
  charset utf-8;
  default_type application/json;
  include mime.types;

  log_format vhost '$host $remote_addr - $remote_user [$time_local] '
                '"$request" $status $body_bytes_sent $request_length '
                '"$http_referer" "$http_user_agent" $request_time $upstream_response_time';
  access_log off;

  # timeouts are configured slightly higher than gateway read-timeout of 60 seconds
  proxy_connect_timeout 70; # seconds, default: 60
  proxy_send_timeout 70; # seconds, default: 60
  proxy_read_timeout 70; # seconds, default: 60
  send_timeout 70; # seconds, default: 60

  client_header_buffer_size 8k; # allow longer URIs + headers (default: 1k)
  large_client_header_buffers 4 16k;

  merge_slashes off; # allow multiple slashes

  map $http_authorization $authentication {
    default "Authentication required";
    "~Bearer" "off";
    # the above means: if we get a request containing an "Authorization: Bearer ..." header, set "off" to $authentication
  }

  map $http_authorization $dittodummyuser {
    default "nginx:${remote_user}";
    "~Bearer" "";
  }

  server {
    server_name   ditto.stack;
    listen        80;
    listen        [::]:80;
    access_log    /var/log/nginx/access.log vhost;

    location / {
      include nginx-cors.conf;

      index index.html;
    }

    # api
    location /api {
      include nginx-cors.conf;
      auth_basic                    $authentication;
      auth_basic_user_file          nginx.htpasswd;

      proxy_pass                    http://ditto-gateway:8080/api;
      proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
      proxy_set_header              X-Real-IP           $remote_addr;
      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header              X-Forwarded-User    $remote_user;
      proxy_set_header              x-ditto-dummy-auth  $dittodummyuser;

      proxy_set_header Connection  '';
      chunked_transfer_encoding    off;
      proxy_buffering              off;
      proxy_cache                  off;
    }

    # ws
    location /ws {
      auth_basic                    $authentication;
      auth_basic_user_file          nginx.htpasswd;

      proxy_pass                    http://ditto-gateway:8080/ws;
      proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
      proxy_set_header              X-Real-IP           $remote_addr;
      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header              X-Forwarded-User    $remote_user;
      proxy_set_header              x-ditto-dummy-auth  $dittodummyuser;

      proxy_set_header              Upgrade             $http_upgrade;
      proxy_set_header              Connection          "upgrade";
      proxy_read_timeout            1d;
      proxy_send_timeout            1d;
    }

    # health
    location /health {
      include nginx-cors.conf;

      proxy_pass                    http://ditto-gateway:8080/health;
      proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
      proxy_set_header              X-Real-IP           $remote_addr;
      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header              X-Forwarded-User    $remote_user;
    }

    # status
    location /status {
      include nginx-cors.conf;

      proxy_pass                    http://ditto-gateway:8080/status;
      proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
      proxy_set_header              X-Real-IP           $remote_addr;
      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header              X-Forwarded-User    $remote_user;
    }

    # stats
    location /stats {
      include nginx-cors.conf;

      proxy_pass                    http://ditto-gateway:8080/stats;
      proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
      proxy_set_header              X-Real-IP           $remote_addr;
      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header              X-Forwarded-User    $remote_user;
    }

    # devops
    location /devops {
      include nginx-cors.conf;

      auth_basic                    "DevOps Authentication required";
      auth_basic_user_file          nginx.htpasswd;

      proxy_pass                    http://ditto-gateway:8080/devops;
      proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
      proxy_set_header              X-Real-IP           $remote_addr;
      proxy_set_header              X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header              X-Forwarded-User    $remote_user;
    }

    # swagger
    # access API doc on: /apidoc/1 or /apidoc/2
    location /apidoc/ {
      rewrite ^/apidoc/([0-9])$ $scheme://$http_host/apidoc/?url=/apidoc/openapi/ditto-api-$1.yml  redirect;
      proxy_pass                    http://ditto-swagger-ui:8080/;
      proxy_http_version            1.1;
      proxy_set_header              Host                $http_host;
    }
  }
}
